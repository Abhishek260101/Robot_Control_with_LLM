// generated from rosidl_adapter/resource/action.idl.em
// with input from llama_msgs/action/GenerateResponse.action
// generated code does not contain a copyright notice

#include "llama_msgs/msg/PartialResponse.idl"
#include "llama_msgs/msg/Response.idl"
#include "llama_msgs/msg/SamplingConfig.idl"
#include "sensor_msgs/msg/Image.idl"

module llama_msgs {
  module action {
    struct GenerateResponse_Goal {
      @verbatim (language="comment", text=
        "prompt")
      string prompt;

      @verbatim (language="comment", text=
        "image for VLMs")
      sensor_msgs::msg::Image image;

      @verbatim (language="comment", text=
        "stop list")
      @default (value="()")
      sequence<string> stop;

      @verbatim (language="comment", text=
        "whether to reset the context")
      @default (value=FALSE)
      boolean reset;

      @verbatim (language="comment", text=
        "sampling config")
      llama_msgs::msg::SamplingConfig sampling_config;
    };
    struct GenerateResponse_Result {
      @verbatim (language="comment", text=
        "final response")
      llama_msgs::msg::Response response;
    };
    struct GenerateResponse_Feedback {
      @verbatim (language="comment", text=
        "partial response")
      llama_msgs::msg::PartialResponse partial_response;
    };
  };
};
